/**
 * 生成路由文件
 */
const fs = require('fs');
const render = require('json-templater/string');
const path = require('path');
const endOfLine = require('os').EOL;
const routers = require('./utils').getRouters();
const uppercamelcase = require('uppercamelcase');

const OUTPUT_PATH = path.join(__dirname, '../src/router/index.js');
const IMPORT_TEMPLATE = `// {{name}}模块路由集合${ endOfLine }import {{name}} from './{{package}}';`;
const MAIN_TEMPLATE = `/* Automatically generated by './build/update-router-index-file.js' */
import Vue from 'vue';
import VueRouter from 'vue-router';
import store from '@/store';

{{include}}

Vue.use(VueRouter);
const originalPush = VueRouter.prototype.push;
VueRouter.prototype.push = function push(location) {
  return originalPush.call(this, location).catch(err => err);
};

const routes = [
  {
    path: '',
    alias: '/login',
    name: 'login',
    component: () => import('@/views/login/login.vue')
  },
  {
    path: '/index',
    name: 'main',
    component: () => import('@/views/page.vue'),
    children: [
      {
        path: '',
        name: 'index',
        meta: {
          title: '综合管理'
        },
        component: () => import('@/views/index/index.vue')
      },
{{list}}
    ]
  },
  ...error,
  {
    path: '*',
    // 404路由，放最后
    name: '404',
    redirect: '/error/404'
  }
];

const router = new VueRouter({
  // 路由配置hash模式
  mode: 'history',
  base: '/integrated-management',
  routes
});

router.beforeEach((to, from, next) => {
  if (to.name === 'login' && store.state.token) {
    // 登录状态下，跳转至主页
    router.push({
      path: \`/index#\${ store.state.token }\`
    });
  }
  next();
});

export default router;
`;

const includeComponentTemplate = [];
const listTemplate = [];

routers.forEach((name) => {
  let componentName = uppercamelcase(name);
  componentName = componentName.replace(/^\S/, char => char.toLowerCase());

  includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
    name: componentName,
    package: name
  }));

  if (name !== 'error') {
    listTemplate.push(`      ...${ componentName }`);
  }
});

const template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  list: listTemplate.join(`,${ endOfLine }`)
});

fs.writeFileSync(OUTPUT_PATH, template);
console.log('[update router index file] DONE:\n', OUTPUT_PATH);

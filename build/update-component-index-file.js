/**
 * 生成组件文件
 */
const fs = require('fs');
const render = require('json-templater/string');
const uppercamelcase = require('uppercamelcase');
const path = require('path');
const endOfLine = require('os').EOL;
const Components = require('./utils').getComponents();

const OUTPUT_PATH = path.join(__dirname, '../src/components/index.js');
const IMPORT_TEMPLATE = 'import {{name}} from \'./{{package}}\';';
const INSTALL_COMPONENT_TEMPLATE = '  {{name}}';
const MAIN_TEMPLATE = `/* Automatically generated by './build/update-component-index-file.js' */
{{include}}

const components = [
{{install}}
];

const install = function install(Vue) {
  components.forEach((component) => {
    Vue.component(component.name, component);
  });
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export default {
  version: '1.0.0',
  install,
{{list}}
};
`;

const ComponentNames = Object.keys(Components);

const includeComponentTemplate = [];
const installTemplate = [];
const listTemplate = [];

ComponentNames.forEach((name) => {
  const componentName = uppercamelcase(name);

  includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
    name: componentName,
    package: name
  }));

  installTemplate.push(render(INSTALL_COMPONENT_TEMPLATE, {
    name: componentName,
    component: name
  }));

  listTemplate.push(`  ${ componentName }`);
});

const template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(`,${ endOfLine }`),
  version: process.env.VERSION || require('../package.json').version,
  list: listTemplate.join(`,${ endOfLine }`)
});

fs.writeFileSync(OUTPUT_PATH, template);
console.log('[update components index file] DONE:\n', OUTPUT_PATH);
